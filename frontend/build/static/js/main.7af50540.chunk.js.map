{"version":3,"sources":["service/socket.js","components/Board.js","util.js","components/GameComponent.js","components/ListGameRulesComponent.js","components/CreateNewGameComponent.js","components/JoinExistingGameComponent.js","components/Introduction.js","App.js","index.js"],"names":["socket","io","Square","_ref","value","onSquareClick","isActive","React","createElement","className","onClick","Board","_ref2","squares","onPlay","boardIndex","isCurrentBoardActve","winner","handleClick","index","console","log","concat","lines","calculateWinnder","i","length","_lines$i","_slicedToArray","a","b","c","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","Symbol","iterator","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","Game","userId","gameId","_useState","useState","_useState2","users","setUsers","_useState3","_useState4","currentMoveIndex","setCurrentMoveIndex","_useState5","repeat","_useState6","gameState","setGameState","_useState7","_useState8","currentBoard","setCurrentBoard","winners","useRef","Array","fill","_useState9","isConnected","_useState11","_useState12","gameWinner","setGameWinner","_useState13","_useState14","statusMessage","setStatusMessage","updateGameState","_x","_updateGameState","apply","arguments","_asyncToGenerator","_callee","state","_context","JSON","stringify","currentBox","currentMove","currentPlayerIndex","currentPlayerMove","handleMove","moveIndex","clickIndex","moveSign","user","filter","x","move","currentPlayerSign","newBoard","replacement","substring","newMoveIndex","nextMoveIndex","current","currentPlayableBoardIndexes","map","nextCurrentBoards","updateCurrentBoard","emit","SendGameState","useEffect","on","off","newWinners","splice","sector","checkAndUpdateBoardWinnerStatus","includes","ListGameRules","CreateNewGameComponent","startGame","setUserId","onChange","target","JoinExistingGame","setGameId","style","margin","Introduction","App","showIntroPage","setShowIntropage","undefined","String","replaceAt","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.7af50540.chunk.js","sourcesContent":["import { io } from 'socket.io-client';\r\n\r\nconst URL = 'https://backend-v1.agreeablemushroom-f8dccb51.westus2.azurecontainerapps.io';\r\n// const URL = process.env.NODE_ENV === 'https://backend:3200' ? undefined : 'http://localhost:3200';\r\n\r\nexport const socket = io(URL);\r\n","import React from \"react\";\r\n\r\nfunction Square({ value, onSquareClick, isActive }) {\r\n    return (\r\n        <button\r\n            className={isActive ? \"activeSquare\" : \"square\"}\r\n            onClick={isActive ? onSquareClick : onSquareClick}\r\n        >\r\n            {(value===\"0\")? \"\": value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default function Board({ squares, onPlay, boardIndex, isCurrentBoardActve, winner }) {\r\n\r\n    function handleClick(index) {\r\n        if (squares[index] && squares[index]!==\"0\") {\r\n            return;\r\n        }\r\n        console.log(`handleClick ${boardIndex} ${index}`)\r\n        onPlay(boardIndex, index);\r\n    }\r\n    // console.log(squares, boardIndex, isCurrentBoardActve, winner)\r\n    return (\r\n        <div className=\"board\">\r\n            <div className=\"inner-board\">\r\n\r\n                <div className=\"board-row\">\r\n                    <Square value={squares[0]} onSquareClick={() => handleClick(0)} isActive={isCurrentBoardActve} />\r\n                    <Square value={squares[1]} onSquareClick={() => handleClick(1)} isActive={isCurrentBoardActve} />\r\n                    <Square value={squares[2]} onSquareClick={() => handleClick(2)} isActive={isCurrentBoardActve} />\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    <Square value={squares[3]} onSquareClick={() => handleClick(3)} isActive={isCurrentBoardActve} />\r\n                    <Square value={squares[4]} onSquareClick={() => handleClick(4)} isActive={isCurrentBoardActve} />\r\n                    <Square value={squares[5]} onSquareClick={() => handleClick(5)} isActive={isCurrentBoardActve} />\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    <Square value={squares[6]} onSquareClick={() => handleClick(6)} isActive={isCurrentBoardActve} />\r\n                    <Square value={squares[7]} onSquareClick={() => handleClick(7)} isActive={isCurrentBoardActve} />\r\n                    <Square value={squares[8]} onSquareClick={() => handleClick(8)} isActive={isCurrentBoardActve} />\r\n                </div>\r\n                <div className=\"result\">\r\n                    {winner ? winner : \"\"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","const lines = [\r\n\t[0, 1, 2],\r\n\t[3, 4, 5],\r\n\t[6, 7, 8],\r\n\t[0, 3, 6],\r\n\t[1, 4, 7],\r\n\t[2, 5, 8],\r\n\t[0, 4, 8],\r\n\t[2, 4, 6]\r\n];\r\n\r\nexport function calculateWinnder(squares) {\r\n\r\n\tconsole.log(`calculateWinnder - ${squares}`);\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i];\r\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] \r\n\t\t\t&& squares[a]!=='0' && squares[b]!=='0' && squares[c]!=='0') {\r\n\t\t\treturn squares[a];\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n// export function calculateGameWinner(boardWinners){\r\n// \tconsole.log('calculateGameWinner', boardWinners);\r\n// \tfor(let i = 0; i < lines.length; i++) {\r\n// \t\tconst [a,b,c] = lines[i];\r\n// \t\tif(boardWinners[a] && boardWinners[b] && boardWinners[c]\r\n// \t\t\t&& boardWinners[a] === boardWinners[b] && boardWinners[c]) {\r\n// \t\t\t\treturn boardWinners[a];\r\n// \t\t\t}\r\n// \t\t)\r\n// \t}\r\n// }\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.sector = function (index) {\r\n\treturn this.slice(index * 9, index * 9 + 9);\r\n}\r\n\r\nexport function ReplaceAt(value, index, replacement){\r\n\treturn value.substring(0,index) + replacement + value.substring(index + replacement.length);\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.replaceAt = function (index, replacement) {\r\n    return this.substring(0, index) + replacement + this.substring(index + replacement.length);\r\n}","import Board from \"./Board.js\";\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { calculateWinnder, ReplaceAt } from \"../util.js\";\r\nimport '../util.js'\r\nimport { socket } from \"../service/socket.js\";\r\n\r\n\r\n\r\nexport default function Game({ userId, gameId }) {\r\n    const [users, setUsers] = useState();\r\n    const [currentMoveIndex, setCurrentMoveIndex] = useState();\r\n    const [gameState, setGameState] = useState(\"0\".repeat(81));\r\n    const [currentBoard, setCurrentBoard] = useState([4]);\r\n    const winners = useRef(Array(9).fill(null));\r\n\r\n    const [isConnected] = useState(socket.isConnected);\r\n\r\n    const [gameWinner, setGameWinner] = useState(null);\r\n    const [statusMessage, setStatusMessage] = useState(\"\");\r\n\r\n    async function updateGameState(state) {\r\n        console.log(`App.js New Game state - ${JSON.stringify(state)}`)\r\n        setUsers(state.users);\r\n        setGameState(state.state);\r\n        setCurrentBoard(state.currentBox);\r\n        setCurrentMoveIndex(state.currentMove);\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('gameState', updateGameState)\r\n        console.log(`Initial value of isConnected - ${isConnected}`)\r\n        console.log(`value of isConnected - ${isConnected}`)\r\n\r\n        socket.emit('getGameState', gameId)\r\n\r\n        return () => {\r\n            socket.off('gameState', updateGameState);\r\n        };\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        UpdateStatusMessage()\r\n    }, [currentMoveIndex])\r\n\r\n\r\n    useEffect(() => {\r\n        checkAndUpdateBoardWinnerStatus()\r\n    }, [gameState])\r\n\r\n\r\n    function UpdateStatusMessage() {\r\n        console.log('UpdateStatusMessage', gameWinner, currentPlayerIndex(), currentPlayerMove());\r\n        \r\n        if (gameWinner) {\r\n            setStatusMessage(\"Game ended, \" + gameWinner + \" won the game\")\r\n        } else if (!currentPlayerMove()) {\r\n            setStatusMessage(\"Opponents move\")\r\n        } else {\r\n            setStatusMessage(\"Your Move\")\r\n        }\r\n    }\r\n\r\n    function currentPlayerIndex() {\r\n        console.log('currentPlayerIndex', users)\r\n        if(users){\r\n            return users[0].name === userId ? 0 : 1;\r\n        }\r\n    }\r\n\r\n    function currentPlayerMove() {\r\n        return currentMoveIndex === currentPlayerIndex()\r\n    }\r\n\r\n    function currentPlayerSign() {\r\n        var user = users.filter(x => x.name === userId);\r\n        console.log(users, user, userId);\r\n\r\n        return user[0].move;\r\n    }\r\n\r\n    function checkAndUpdateBoardWinnerStatus() {\r\n        let newWinners = winners.current.splice();\r\n        for (let i = 0; i < 9; i++) {\r\n            newWinners[i] = calculateWinnder(gameState.sector(i));\r\n        }\r\n        winners.current = newWinners;\r\n        var winner = calculateWinnder(winners.current)\r\n        if (winner) {\r\n            setGameWinner(winner)\r\n        }\r\n    }\r\n\r\n    function updateCurrentBoard(nextMoveIndex) {\r\n        if (winners.current[nextMoveIndex]) {\r\n            let currentPlayableBoardIndexes = winners.current.map((value, index) => value == null ? index : null);\r\n            let nextCurrentBoards = currentPlayableBoardIndexes.filter(x => x != null);\r\n            console.log('currentPlayableBoardIndexes', currentPlayableBoardIndexes);\r\n            console.log(\"nextCurrentBoards\", nextCurrentBoards)\r\n            setCurrentBoard(nextCurrentBoards);\r\n            return nextCurrentBoards;\r\n        } else {\r\n            setCurrentBoard([nextMoveIndex]);\r\n            return [nextMoveIndex]\r\n        }\r\n    }\r\n\r\n    function handleMove(boardIndex, moveIndex) {\r\n        console.log(`handleMove ${boardIndex}, ${moveIndex}, ${JSON.stringify(currentMoveIndex)}, ${JSON.stringify(users)}, ${userId}`);\r\n\r\n        if (currentPlayerMove()) {\r\n            var clickIndex = boardIndex * 9 + moveIndex;\r\n            var moveSign = currentPlayerSign();\r\n            console.log(`handleMove ${boardIndex} ${moveIndex} ${moveSign}`);\r\n            var newBoard = ReplaceAt(gameState, clickIndex, moveSign)\r\n            var newMoveIndex = currentMoveIndex ^ 1;\r\n\r\n            setGameState(newBoard);\r\n\r\n            var currentBoard = updateCurrentBoard(moveIndex);\r\n            setCurrentMoveIndex(newMoveIndex);\r\n            SendGameState(newBoard, newMoveIndex, currentBoard)\r\n        }\r\n    }\r\n\r\n    function SendGameState(newBoard, newMoveIndex, moveIndex) {\r\n        var state = {\r\n            users: users,\r\n            state: newBoard,\r\n            currentMove: newMoveIndex,\r\n            currentBox: moveIndex,\r\n        }\r\n        console.log(`SendGameState ${JSON.stringify(state)}`)\r\n        socket.emit('gameState', gameId, state);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={gameWinner ? \"winner\" : \"status\"}>{statusMessage}</div>\r\n            <div className=\"game\">\r\n                <div className=\"status\">UserID: {userId}</div>\r\n                <div className=\"status\">GameID: {gameId}</div>\r\n                <div className=\"game-board\">\r\n                    <div className=\"game-row\">\r\n                        <Board\r\n                            squares={gameState.sector(0)} onPlay={handleMove}\r\n                            boardIndex={0} isCurrentBoardActve={currentBoard.includes(0)} winner={winners.current[0]} />\r\n                        <Board\r\n                            squares={gameState.sector(1)} onPlay={handleMove}\r\n                            boardIndex={1} isCurrentBoardActve={currentBoard.includes(1)} winner={winners.current[1]} />\r\n                        <Board\r\n                            squares={gameState.sector(2)} onPlay={handleMove}\r\n                            boardIndex={2} isCurrentBoardActve={currentBoard.includes(2)} winner={winners.current[2]} />\r\n                    </div>\r\n                    <div className=\"game-row\">\r\n                        <Board\r\n                            squares={gameState.sector(3)} onPlay={handleMove}\r\n                            boardIndex={3} isCurrentBoardActve={currentBoard.includes(3)} winner={winners.current[3]} />\r\n                        <Board\r\n                            squares={gameState.sector(4)} onPlay={handleMove}\r\n                            boardIndex={4} isCurrentBoardActve={currentBoard.includes(4)} winner={winners.current[4]} />\r\n                        <Board\r\n                            squares={gameState.sector(5)} onPlay={handleMove}\r\n                            boardIndex={5} isCurrentBoardActve={currentBoard.includes(5)} winner={winners.current[5]} />\r\n                    </div>\r\n                    <div className=\"game-row\">\r\n                        <Board\r\n                            squares={gameState.sector(6)} onPlay={handleMove}\r\n                            boardIndex={6} isCurrentBoardActve={currentBoard.includes(6)} winner={winners.current[6]} />\r\n                        <Board\r\n                            squares={gameState.sector(7)} onPlay={handleMove}\r\n                            boardIndex={7} isCurrentBoardActve={currentBoard.includes(7)} winner={winners.current[7]} />\r\n                        <Board\r\n                            squares={gameState.sector(8)} onPlay={handleMove}\r\n                            boardIndex={8} isCurrentBoardActve={currentBoard.includes(8)} winner={winners.current[8]} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <ol>{/*TODO*/}</ol>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function ListGameRules() {\r\n    return (\r\n        <div className=\"game-rules\">\r\n            <h3>How to Play?</h3>\r\n            <ul className=\"game-rules-section\">\r\n                <li>Just like in regular tic-tac-toe, the two players (X and O) take turns, starting with X.</li>\r\n                <li>The game starts with X playing wherever they want in any of the 81 empty spots.</li>\r\n                <li>Next the opponent plays, however they are forced to play in the small board indicated by the relative location of the previous move. <br /></li>\r\n                <li>For example, if X plays in the top right square of a small (3 × 3) board, then O has to play in the small board located at the top right of the larger board.</li>\r\n                <li>Playing any of the available spots decides in which small board the next player plays.</li>\r\n            </ul>\r\n            <ul className=\"game-rules-section\">\r\n                <li>If a move is played so that it is to win a small board by the rules of normal tic-tac-toe, then the entire small board is marked as won by the player in the larger board.</li>\r\n                <li>Once a small board is won by a player or it is filled completely, no more moves may be played in that board.</li>\r\n                <li>If a player is sent to such a board, then that player may play in any other board.</li>\r\n            </ul>\r\n\r\n            <h3>How to Win?</h3>\r\n            <ul className=\"game-rules-section\">\r\n                <li>Game play ends when either a player wins the larger board or there are no legal moves remaining, in which case the game is a draw</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function CreateNewGameComponent({ startGame }) {\r\n    const [userId, setUserId] = useState(\"\");\r\n\r\n    return (\r\n        <div className=\"joinNewGame\">\r\n            <h3>Create a new game</h3>\r\n            <div className=\"joinNewGame-userId\">\r\n                <div className=\"userIdText\">\r\n                    User Id - \r\n                </div>\r\n                <div className=\"underIdInput\">\r\n                    <input type=\"text\" value={userId} onChange={e => setUserId(e.target.value)} />\r\n                </div>\r\n            </div>\r\n            <input className=\"userIdButton\" type=\"button\" value=\"Create\" onClick={() => startGame(userId)} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function JoinExistingGame({ startGame }) {\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [gameId, setGameId] = useState(\"\");\r\n\r\n    return (\r\n        <div className=\"joinExistingGame\" style={{ margin: \"0 auto\" }}>\r\n            <h3>Join an existing game</h3>\r\n            <div className=\"joinExistingGame-userId\">\r\n                <div style={{margin: \"0 10px 0 0\"}}>\r\n                    User Id - \r\n                </div>\r\n                <div>\r\n                    <input type=\"text\" value={userId} onChange={e => setUserId(e.target.value)} />\r\n                </div>\r\n            </div>\r\n            <div className=\"joinExistingGame-gameId\">\r\n                <div style={{margin: \"0 10px 0 0\"}}>\r\n                    Game Id - \r\n                </div>\r\n                <input type=\"text\" value={gameId} onChange={e => setGameId(e.target.value)} />\r\n            </div>\r\n\r\n            <input className=\"userIdButton\" type=\"button\" value=\"Join\" onClick={() => startGame(userId, gameId)} />\r\n\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport ListGameRules from \"./ListGameRulesComponent\";\r\nimport CreateNewGameComponent from \"./CreateNewGameComponent\";\r\nimport JoinExistingGame from \"./JoinExistingGameComponent\";\r\n\r\nexport default function Introduction({ startGame }) {\r\n    return (\r\n        <div>\r\n            <div className=\"joinGame\">\r\n                <CreateNewGameComponent startGame={startGame} />\r\n                <div className=\"or\">Or</div>\r\n                <JoinExistingGame startGame={startGame} />\r\n            </div>\r\n            <ListGameRules />\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\";\nimport { socket } from \"./service/socket.js\";\nimport Game from \"./components/GameComponent.js\";\nimport Introduction from \"./components/Introduction.js\";\n\nexport default function App() {\n    const [userId, setUserId] = useState(\"\");\n    const [gameId, setGameId] = useState(\"\");\n    const [showIntroPage, setShowIntropage] = useState(true);\n\n\n    socket.on('startGame', async (gameId) => {\n        console.log(`startGame event ${gameId}`);\n        setShowIntropage(false);\n        await setGameId(gameId);\n    })\n\n    function startGame(userId, gameId) {\n        console.log(userId, gameId)\n        setUserId(userId)\n        if (gameId === undefined) {\n            console.log(\"Createing a new game\")\n            socket.emit('createGame', userId);\n        } else {\n            setGameId(gameId);\n            console.log(\"Join a existing game\")\n            socket.emit('joinGame', userId, gameId)\n        }\n    }\n\n    return (\n        <div>\n            {showIntroPage\n                ? <Introduction startGame={startGame} />\n                :\n                <div>\n                    <Game userId={userId} gameId={gameId}/>\n                </div>\n            }\n        </div>\n    )\n}\n\n","import React, { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);"],"sourceRoot":""}